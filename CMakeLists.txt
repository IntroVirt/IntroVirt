CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(libintrovirt)

IF( NOT CMAKE_BUILD_TYPE )
     SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

#SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
#SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -g")

add_compile_options("-Wall" "-Wno-switch")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

SET(CMAKE_INSTALL_PREFIX "/usr")
SET(ALL_PACKAGES "")

SET(PACKAGE_MAJOR_VERSION 0)
SET(PACKAGE_MINOR_VERSION 57)
SET(PACKAGE_PATCH_VERSION 4)

IF ( PACKAGE_PATCH_VERSION_EXTRA )
     SET(PACKAGE_PATCH_VERSION "${PACKAGE_PATCH_VERSION}.${PACKAGE_PATCH_VERSION_EXTRA}")
ENDIF()

add_definitions(-DBOOST_STACKTRACE_USE_BACKTRACE=1)

FIND_PACKAGE(Boost REQUIRED)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/src ${CMAKE_CURRENT_BINARY_DIR})

# a custom target that is always built
ADD_CUSTOM_TARGET(gitversion ALL DEPENDS git_version ) # git_version is nothing more than a unique string

# creates gitversion.h using cmake script
ADD_CUSTOM_COMMAND(OUTPUT git_version BYPRODUCTS ${CMAKE_CURRENT_BINARY_DIR}/gitversion.h COMMAND ${CMAKE_COMMAND} -DSOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR} -DPROJECT_SOURCE_DIR=${PROJECT_SOURCE_DIR}
	-P ${CMAKE_CURRENT_SOURCE_DIR}/gitversion.cmake)

# gitversion.h is a generated file
SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/gitversion.h
	PROPERTIES GENERATED TRUE
	HEADER_FILE_ONLY TRUE)

# Generate Windows library headers and sources
EXECUTE_PROCESS(
	COMMAND ${PYTHON_EXECUTABLE} "${CMAKE_SOURCE_DIR}/win_func_call_generator/generate.py" "--headers" "${PROJECT_SOURCE_DIR}/include/introvirt/windows/libraries/" "${PROJECT_SOURCE_DIR}/src/windows/libraries/"
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
	OUTPUT_VARIABLE GENERATED_WINLIB_HEADERS
	OUTPUT_STRIP_TRAILING_WHITESPACE
)
SET_SOURCE_FILES_PROPERTIES(${GENERATED_WINLIB_HEADERS} PROPERTIES GENERATED TRUE)

EXECUTE_PROCESS(
	COMMAND ${PYTHON_EXECUTABLE} "${CMAKE_SOURCE_DIR}/win_func_call_generator/generate.py" "--sources" "${PROJECT_SOURCE_DIR}/include/introvirt/windows/libraries/" "${PROJECT_SOURCE_DIR}/src/windows/libraries/"
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
	OUTPUT_VARIABLE GENERATED_WINLIB_SOURCES
	OUTPUT_STRIP_TRAILING_WHITESPACE
)

# Generate Windows system call headers and sources
EXECUTE_PROCESS(
	COMMAND ${PYTHON_EXECUTABLE} "${CMAKE_SOURCE_DIR}/win_syscall_generator/generate.py" "--headers" "${CMAKE_SOURCE_DIR}"
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
	OUTPUT_VARIABLE GENERATED_HEADERS
	OUTPUT_STRIP_TRAILING_WHITESPACE
)
SET_SOURCE_FILES_PROPERTIES(${GENERATED_HEADERS} PROPERTIES GENERATED TRUE)

EXECUTE_PROCESS(
    COMMAND ${PYTHON_EXECUTABLE} "${CMAKE_SOURCE_DIR}/win_syscall_generator/generate.py" "--sources" "${CMAKE_SOURCE_DIR}"
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    OUTPUT_VARIABLE GENERATED_SOURCES
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

SET_PROPERTY(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS "${SYSCALL_GEN_INPUT}")

FILE(GLOB_RECURSE HEADERS ${PROJECT_SOURCE_DIR}/include/*.hh)

ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(examples)
ADD_SUBDIRECTORY(tests)
ADD_SUBDIRECTORY(tools)
ADD_DEPENDENCIES(introvirt gitversion)

IF (DOXYGEN)
	FIND_PACKAGE(Doxygen REQUIRED)

	# add a target to generate API documentation with Doxygen
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)

    FILE(GLOB_RECURSE EXAMPLES ${PROJECT_SOURCE_DIR}/examples/*.cc)

	ADD_CUSTOM_COMMAND(
		OUTPUT ${CMAKE_BINARY_DIR}/html/index.html
		COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile
		DEPENDS ${HEADERS} ${DOCS} ${EXAMPLES}
		COMMENT "Generating API documentation with Doxygen: ${CMAKE_CURRENT_SOURCE_DIR}" VERBATIM
	)

	ADD_CUSTOM_TARGET(
		doc ALL DEPENDS ${CMAKE_BINARY_DIR}/html/index.html
	)

    ADD_DEPENDENCIES(doc generate_syscalls generate_funccalls)

	# Install rules for doxygen
	INSTALL(DIRECTORY ${CMAKE_BINARY_DIR}/html/ DESTINATION share/doc/libintrovirt-doc/html COMPONENT libintrovirt-doc)
ENDIF(DOXYGEN)

FILE(GLOB_RECURSE WIN_FUNCCALL_GEN_INPUT ${PROJECT_SOURCE_DIR}/win_func_call_generator/*.tpl ${PROJECT_SOURCE_DIR}/win_func_call_generator/*.py ${PROJECT_SOURCE_DIR}/win_func_call_generator/*.json)

ADD_CUSTOM_COMMAND(
	OUTPUT ${GENERATED_WINLIB_HEADERS} ${GENERATED_WINLIB_SOURCES}
	COMMAND ${PYTHON_EXECUTABLE} win_func_call_generator/generate.py "${PROJECT_SOURCE_DIR}/include/introvirt/windows/libraries/" "${PROJECT_SOURCE_DIR}/src/windows/libraries/"
    DEPENDS ${WIN_FUNCCALL_GEN_INPUT}
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
	COMMENT "Generating Windows library call handlers..." VERBATIM
)

ADD_CUSTOM_TARGET(
	generate_funccalls ALL DEPENDS ${GENERATED_WINLIB_HEADERS} ${GENERATED_WINLIB_SOURCES}
)

SET_PROPERTY(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS "${WIN_FUNCCALL_GEN_INPUT}")

FILE(GLOB_RECURSE SYSCALL_GEN_INPUT ${PROJECT_SOURCE_DIR}/win_syscall_generator/*.tpl ${PROJECT_SOURCE_DIR}/win_syscall_generator/*.py ${PROJECT_SOURCE_DIR}/win_syscall_generator/*.json)

ADD_CUSTOM_COMMAND(
	OUTPUT ${GENERATED_HEADERS} ${GENERATED_SOURCES}
	COMMAND ${PYTHON_EXECUTABLE} win_syscall_generator/generate.py ${PROJECT_SOURCE_DIR}
    DEPENDS ${SYSCALL_GEN_INPUT}
	WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
	COMMENT "Generating Windows NT system call handlers..." VERBATIM
)

ADD_CUSTOM_TARGET(
	generate_syscalls ALL DEPENDS ${GENERATED_HEADERS} ${GENERATED_SOURCES}
)

SET_PROPERTY(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS "${SYSCALL_GEN_INPUT}")

# Format target
ADD_CUSTOM_TARGET(
     format
     COMMAND find ${PROJECT_SOURCE_DIR}/src ${PROJECT_SOURCE_DIR}/include -name '*.hh' -o -iname '*.cc' | xargs clang-format -i -style=file
)

# Install rule for include headers
INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/include/introvirt DESTINATION include COMPONENT libintrovirt-dev)

SET(BOOST_VERSION "${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}")

# Deb package generation
SET(CPACK_DEB_COMPONENT_INSTALL ON)
SET(CPACK_GENERATOR "DEB")
SET(CPACK_SOURCE_GENERATOR "DEB")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "cmake,libcurl4-openssl-dev,libboost-dev,libboost-program-options-dev,liblog4cxx-dev,libmspdb-dev,python3-jinja2,python3,doxygen,clang-format,debhelper (>= 8.9.7),linux-libc-dev (>= 2.6.27)")
SET(CPACK_PACKAGE_VERSION "${PACKAGE_MAJOR_VERSION}.${PACKAGE_MINOR_VERSION}.${PACKAGE_PATCH_VERSION}")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Sean LaPlante <laplantes@ainfosec.com>")

SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_NAME "libintrovirt-dev")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_DESCRIPTION_SUMMARY "IntroVirt core library - Development headers")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_DEPENDS "libintrovirt1" )
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_ARCHITECTURE "amd64")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_SECTION "utils")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_PRIORITY "extra")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_RECOMMENDS "")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_SUGGESTS "libintrovirt-doc")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_REPLACES "liblintrovirt-dev (<< 0.50), libwintrovirt-dev (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_BREAKS "liblintrovirt-dev (<< 0.50), libwintrovirt-dev (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT-DEV_PACKAGE_CONFLICTS "liblintrovirt-dev (<< 0.50), libwintrovirt-dev (<< 0.50)")

SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_NAME "libintrovirt1")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_DESCRIPTION_SUMMARY "IntroVirt core library")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_DEPENDS "libmspdb1, liblog4cxx10v5" )
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_ARCHITECTURE "amd64")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_SECTION "utils")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_PRIORITY "extra")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_RECOMMENDS "")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_SUGGESTS "introvirt-tools")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_REPLACES "liblintrovirt1 (<< 0.50), libwintrovirt1 (<< 0.50), libintrovirt-kvm (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_BREAKS "liblintrovirt1 (<< 0.50), libwintrovirt1 (<< 0.50), libintrovirt-kvm (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_CONFLICTS "liblintrovirt1 (<< 0.50), libwintrovirt1 (<< 0.50), libintrovirt-kvm (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT1_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_SOURCE_DIR}/deb/conffiles")

SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_NAME "introvirt-tools")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_DESCRIPTION "IntroVirt example tools")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_DEPENDS "libintrovirt1, libfuse2, libboost-program-options${BOOST_VERSION}" )
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_ARCHITECTURE "amd64")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_SECTION "utils")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_PRIORITY "extra")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_RECOMMENDS "")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_SUGGESTS "")
SET(CPACK_DEBIAN_INTROVIRT-TOOLS_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_SOURCE_DIR}/deb/postinst")

SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_NAME "libintrovirt-doc")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_DESCRIPTION_SUMMARY "libintrovirt documentation")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_DEPENDS "" )
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_ARCHITECTURE "amd64")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_SECTION "utils")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_PRIORITY "extra")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_RECOMMENDS "")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_SUGGESTS "")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_REPLACES "liblintrovirt-doc (<< 0.50), libwintrovirt-doc (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_BREAKS "liblintrovirt-doc (<< 0.50), libwintrovirt-doc (<< 0.50)")
SET(CPACK_DEBIAN_LIBINTROVIRT-DOC_PACKAGE_CONFLICTS "liblintrovirt-doc (<< 0.50), libwintrovirt-doc (<< 0.50)")

INCLUDE(CPack)
